version: "3.9"

services:
  db:
    image:
      postgres:14.5
    restart: unless-stopped
    volumes:
      - ./prod_data/db:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - DEBUG=0
  web: &web
    build:
      context: .
      dockerfile: Dockerfile.prod
    restart: on-failure
    command: gunicorn NinjaSushi.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/NinjaSushi/staticfiles
      - media_volume:/home/app/NinjaSushi/media
    expose:
      - 8000
    env_file:
      - .env
    environment:
      - DEBUG=0
    depends_on:
      - db
      - rabbitmq
      - celery_beat
      - celery_worker
  rabbitmq:
    image: rabbitmq:3.11
  celery_worker:
    <<: *web
    command: celery -A NinjaSushi worker --loglevel=info
    ports: []
    environment:
      - DEBUG=0
    depends_on:
      - rabbitmq
      - db
      - celery_beat
  celery_beat:
    <<: *web
    command: celery -A NinjaSushi beat --loglevel=info --max-interval=999999
    ports: []
    environment:
      - DEBUG=0
    depends_on:
      - rabbitmq
      - db
  nginx:
    build:
      context: ./nginx
    restart: always
    volumes:
      - static_volume:/home/app/NinjaSushi/staticfiles
      - media_volume:/home/app/NinjaSushi/media
      - ./certbot/www/:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www/:/var/www/certbot
      - ./certbot/conf/:/etc/letsencrypt

volumes:
  static_volume:
  media_volume: